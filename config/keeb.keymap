#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define lower_layer 1

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp NUMBER_1 &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4   &kp NUMBER_5     &kp F1
   &kp TAB   &kp Q &kp W    &kp E    &kp R   &kp T     &kp F2
   &kp LCTRL &kp A &kp S    &kp D    &kp F   &kp G     &kp F3
   &mo 1     &kp Z &kp X    &kp C    &kp V   &kp B     &kp F4
                &kp LALT &kp LGUI &kp RET &kp SPACE &kp LSHIFT
                                                                &kp F5     &kp NUMBER_6     &kp NUMBER_7    &kp NUMBER_8     &kp NUMBER_9     &kp NUMBER_0    &kp MINUS
                                                                &kp F6     &kp Y     &kp U    &kp I     &kp O     &kp P    &kp EQUAL
                                                                &kp F7     &kp H     &kp J    &kp K     &kp L     &kp SEMI &kp APOS
                                                                &kp F8     &kp N     &kp M    &kp COMMA &kp DOT   &kp FSLH &kp BSLH
                                                                &kp RSHIFT &kp SPACE &kp BSPC &kp LEFT_BRACKET   &kp RIGHT_BRACKET
                        >;
                };
                lower_layer {
                        bindings = <
   &trans &trans   &trans    &trans    &trans &trans &kp C_VOL_UP
   &trans &trans   &kp UP    &trans    &trans &trans &kp C_VOL_DN
   &trans &kp LEFT &kp DOWN  &kp RIGHT &trans &trans &bt BT_NXT  
   &trans &trans   &trans    &trans    &trans &trans &bt BT_CLR  
                &trans    &trans    &trans &trans &trans      
                                                                &kp K_SLEEP      &trans &trans &trans &trans &trans &trans
                                                                &kp C_PLAY_PAUSE &trans &trans &trans &trans &trans &trans
                                                                &kp C_NEXT       &trans &trans &trans &trans &trans &trans
                                                                &kp C_MUTE       &trans &trans &trans &trans &trans &trans
                                                                &trans           &trans &trans &trans &trans
                        >;
                };
        };
};